// src/utils/reportGenerator.js

export function generateReport(rule, results) {
  const now = new Date().toLocaleString();

  const base = {
    date: now,
    total: results.length,
  };

  switch (rule) {
    case 'Toitures avec tr√©mies':
      return {
        ...base,
        title: 'Pr√©sence de tr√©mies dans les toitures',
        description: 'V√©rifie si des tr√©mies sont pr√©sentes dans les toitures du b√¢timent.',
        passed: results.length > 0,
        details: results.length > 0
          ? results.map(r => ({
              status: 'success',
              message: `‚úÖ Tr√©mie trouv√©e : ${r.Tr√©mie} associ√©e √† ${r.slab} (${r.Slab_typeLabel})`
            }))
          : [{
              status: 'warning',
              message: '‚ö†Ô∏è Aucune tr√©mie d√©tect√©e dans les toitures. Ajoutez-les si n√©cessaire.'
            }]
      };
      case 'Elements et proprietes':
        return {
          ...base,  
          title: 'Ouvertures et leurs dimensions',
          description: 'Affiche les portes et fen√™tres, accompagn√©es de leur hauteur et largeur.',
          passed: results.length > 0,
          details: results.map((r) => ({
            status: 'success',
            message: `üö™ ${r.type?.split('#').pop()} ${r.ouverture} - largeur: ${r.largeur || 'N/A'} - hauteur: ${r.hauteur || 'N/A'}`
          }))
        };
  
    case 'Garde-corps':
      return {
        ...base,
        title: 'Analyse des garde-corps',
        description: 'V√©rifie que chaque garde-corps a des attributs complets.',
        passed: results.every(r => r.Hauteur),
        details: results.length > 0
          ? results.map(r => ({
              status: r.Hauteur ? 'success' : 'warning',
              message: r.Hauteur
                ? `üü¢ Garde-corps ${r.gardeCorps} a une hauteur de ${r.Hauteur}`
                : `‚ö†Ô∏è Garde-corps ${r.gardeCorps} n‚Äôa pas de hauteur d√©finie`
            }))
          : [{
              status: 'error',
              message: '‚ùå Aucun garde-corps trouv√© dans le mod√®le.'
            }]
      };

    case 'Tr√©mies > 80cm':
      return {
        ...base,
        title: 'Contr√¥le des tr√©mies dangereuses',
        description: 'D√©tecte les tr√©mies de grande taille (‚â• 80 cm) pouvant poser un risque.',
        passed: results.length === 0, // ‚úÖ Conforme si aucune tr√©mie large
        details: results.length > 0
          ? results.map(r => ({
              status: 'error',
              message: `‚ùå Tr√©mie dangereuse d√©tect√©e : ${r.opening} (${r.width} x ${r.height})`
            }))
          : [{
              status: 'success',
              message: '‚úÖ Aucune tr√©mie ‚â• 80cm d√©tect√©e. Le mod√®le respecte la consigne.'
            }]
      };

    case 'Toitures avec garde-corps':
      return {
        ...base,
        title: 'V√©rification des garde-corps sur les toitures',
        description: 'V√©rifie si les toitures sont prot√©g√©es par des garde-corps.',
        passed: results.length > 0,
        details: results.length > 0
          ? results.map(r => ({
              status: 'success',
              message: `‚úÖ Garde-corps ${r.railing} pr√©sent sur la toiture ${r.roofName || r.roof}`
            }))
          : [{
              status: 'error',
              message: '‚ùå Aucune toiture n‚Äôa de garde-corps. Cela repr√©sente un risque de chute.'
            }]
      };

    case 'Ouvertures':
      return {
        ...base,
        title: 'V√©rification des ouvertures',
        description: 'Liste les ouvertures d√©tect√©es dans le mod√®le.',
        passed: results.length > 0,
        details: results.map(r => ({
          status: 'info',
          message: `üîç Ouverture trouv√©e : ${r.opening}`
        }))
      };
      

    default:
      return {
        ...base,
        title: `Rapport g√©n√©rique - ${rule}`,
        description: 'R√©sultats sans traitement personnalis√©.',
        passed: results.length > 0,
        details: results.length > 0
          ? results.map((r, i) => ({
              status: 'info',
              message: JSON.stringify(r, null, 2)
            }))
          : [{
              status: 'warning',
              message: '‚ÑπÔ∏è Aucune donn√©e d√©tect√©e. Aucun traitement personnalis√© d√©fini.'
            }]
      };
  }
}
